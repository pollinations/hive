name: Deploy PR Previews

on:
  pull_request:
    types: [opened, synchronize, reopened, closed]
    paths:
      - '*/package.json'
      - '*/index.html'
      - '*/**'

jobs:
  build-and-deploy:
    if: github.event.action != 'closed'
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Process apps
        run: |
          # Create a directory for the built apps
          mkdir -p pr-preview

          # Process each app directory
          for APP in */; do
            APP=${APP%/}  # Remove trailing slash
            
            # Skip special directories
            if [[ "$APP" == "pr-preview" || "$APP" == ".*" || "$APP" == "node_modules" || "$APP" == ".git" || "$APP" == ".github" ]]; then
              continue
            fi
            
            echo "Processing $APP"
            
            if [ -f "$APP/package.json" ]; then
              echo "Building Node.js app: $APP"
              cd $APP
              npm install
              npm run build
              
              # Copy build output to pr-preview
              if [ -d "build" ]; then
                mkdir -p ../pr-preview/$APP
                cp -r build/* ../pr-preview/$APP/
              elif [ -d "dist" ]; then
                mkdir -p ../pr-preview/$APP
                cp -r dist/* ../pr-preview/$APP/
              fi
              cd ..
            elif [ -f "$APP/index.html" ]; then
              echo "Static site detected: $APP"
              mkdir -p pr-preview/$APP
              cp -r $APP/* pr-preview/$APP/
            fi
          done
          
          # Create index page that links to all PR preview apps
          echo "<html><head><title>PR #${PR_NUMBER} Preview</title><style>body{font-family:sans-serif;max-width:800px;margin:2rem auto;padding:0 1rem}</style></head><body>" > pr-preview/index.html
          echo "<h1>PR #${PR_NUMBER} Preview</h1><ul>" >> pr-preview/index.html
          for APP in pr-preview/*/; do
            APP=${APP%/}  # Remove trailing slash
            APP=${APP#pr-preview/}  # Remove pr-preview/ prefix
            if [ "$APP" != "index.html" ]; then
              echo "<li><a href='$APP'>$APP</a></li>" >> pr-preview/index.html
            fi
          done
          echo "</ul></body></html>" >> pr-preview/index.html
        env:
          PR_NUMBER: ${{ github.event.pull_request.number }}

      - name: Deploy PR Preview
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./pr-preview
          destination_dir: pr-${{ github.event.pull_request.number }}

      - name: Comment PR
        uses: actions/github-script@v6
        with:
          script: |
            const baseUrl = 'https://pollinations.github.io/hive/pr-${{ github.event.pull_request.number }}/';
            const body = `ðŸš€ PR Preview deployed!\n\nPreview URLs:\n- [Index Page](${baseUrl})\n`;
            
            const comments = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });
            
            const botComment = comments.data.find(comment => 
              comment.user.login === 'github-actions[bot]' && 
              comment.body.includes('PR Preview deployed!')
            );
            
            if (botComment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: body
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: body
              });
            }

  cleanup:
    if: github.event.action == 'closed'
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v3
        with:
          ref: gh-pages
          
      - name: Delete PR Preview
        run: |
          rm -rf pr-${{ github.event.pull_request.number }}
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add -A
          git commit -m "Remove PR preview for #${{ github.event.pull_request.number }}" || echo "No changes to commit"
          git push