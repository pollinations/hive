name: Test Apps

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test-apps:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install Playwright
        run: |
          npm init -y
          npm install @playwright/test
          npx playwright install chromium

      - name: Create test script for HTML files
        run: |
          cat > test-html.js << 'EOL'
          const { chromium } = require('@playwright/test');

          async function testHtmlFile(htmlPath) {
            const browser = await chromium.launch();
            const page = await browser.newPage();
            
            let hasErrors = false;
            page.on('console', msg => {
              if (msg.type() === 'error') {
                console.error(`Error in ${htmlPath}:`, msg.text());
                hasErrors = true;
              }
            });
            
            page.on('pageerror', error => {
              console.error(`Page error in ${htmlPath}:`, error);
              hasErrors = true;
            });
            
            try {
              // Use file:// protocol to load local HTML files
              await page.goto(`file://${process.cwd()}/${htmlPath}`);
              // Wait a bit for any async operations
              await page.waitForTimeout(2000);
            } catch (error) {
              console.error(`Failed to load ${htmlPath}:`, error);
              hasErrors = true;
            }
            
            await browser.close();
            return !hasErrors;
          }

          async function main() {
            const htmlPath = process.argv[2];
            const success = await testHtmlFile(htmlPath);
            process.exit(success ? 0 : 1);
          }

          main();
          EOL

      - name: Test apps
        run: |
          # Track if any tests fail
          TESTS_FAILED=0
          
          # Process each app directory
          for APP in */; do
            APP=${APP%/}  # Remove trailing slash
            
            # Skip special directories
            if [[ "$APP" == "node_modules" || "$APP" == ".git" || "$APP" == ".github" || "$APP" == "_site" ]]; then
              continue
            fi
            
            echo "Testing $APP"
            
            if [ -f "$APP/package.json" ]; then
              echo "Testing Node.js app: $APP"
              cd $APP
              
              # Install dependencies
              if ! npm install; then
                echo "❌ Failed to install dependencies for $APP"
                TESTS_FAILED=1
                cd ..
                continue
              fi
              
              # Run tests if they exist
              if grep -q "\"test\"" package.json; then
                if ! npm test; then
                  echo "❌ Tests failed for $APP"
                  TESTS_FAILED=1
                fi
              else
                echo "ℹ️ No tests found for $APP"
              fi
              
              # Try to build
              if ! npm run build; then
                echo "❌ Build failed for $APP"
                TESTS_FAILED=1
              fi
              
              cd ..
            elif [ -f "$APP/index.html" ]; then
              echo "Testing static HTML app: $APP"
              if ! node test-html.js "$APP/index.html"; then
                echo "❌ HTML tests failed for $APP"
                TESTS_FAILED=1
              fi
            fi
          done
          
          exit $TESTS_FAILED